(package vx/web/htmldoc
 :libs (lib event :path vx/event)
       (lib html  :path vx/web/html)
 :doc "Html Client-side document handler")

(func any-data<-id : any
 [id : string]
 (native
  :js :auto)
 :doc "Returns data component from element.")

(func boolean-replace<-id-htmltext : boolean
 [id       : string
  htmltext : string]
 (native
  :js :auto)
 :sideeffects "Changes HTML display."
 :clientserver :client
 :doc "Replaces an html node with given id and text.")

(func boolean-replace<-id-htmltext-data-eventmap : boolean
 [id       : string
  htmltext : string
  data     : any
  eventmap : event/eventmap]
 (native
  :js :auto)
 :sideeffects "Changes HTML display."
 :clientserver :client
 :doc "Replaces an html node with given id and text.")

(func boolean-write<-id-htmltext : boolean
 [id       : string
  htmltext : string]
 (native
  :js :auto)
 :sideeffects "Changes HTML display."
 :clientserver :client
 :doc "Writes to an html node with given id and text.")

(func boolean-write<-stylesheet : boolean
 [stylesheet : html/stylesheet]
 (let : boolean
  [stylelist : stylelist := (styles<-stylesheet
                             stylesheet)
   text      : string    := (string<-stylelist-indent
                             stylelist
                             0)
   iswrite   : boolean   := (boolean-write-stylesheet<-string
                             text)]
  iswrite)
 :async
 :sideeffects "Changes Stylesheet display."
 :clientserver :client
 :doc "Writes a css stylesheet.")

(func boolean-write-stylesheet<-string : boolean
 [text : string]
 (native
  :js :auto)
 :async
 :sideeffects "Changes Stylesheet display."
 :clientserver :client
 :doc "Writes a css stylesheet.")

(func string<-id : string
 [id   : string]
 (native
  :js :auto)
 :clientserver :client
 :doc "Reads the value of an html node by id.")
