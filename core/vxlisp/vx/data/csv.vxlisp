(package vx/data/csv
 :libs (lib collection :path vx/collection)
       (lib type :path vx/type)
       (lib tb :path vx/data/textblock)
 :doc "Csv handler")

(type csv : struct
 :properties
  [headers : stringlist
   rows    : csvrows])

(type csvrows : list
 :allowtypes [stringlist])

(const delimcsv : tb/delim
 (tb/delim
  :name "delimcsv"
  :delimlist
   (tb/delimlist
    tb/delimline
    tb/delimquote
    tb/delimcomma))
 :doc "Csv File Delimiters")

(func csv<-textblock : csv
 [textblock : tb/textblock]
 (let
  [allrows : csvrows    := (csvrows<-textblock textblock)
   headers : stringlist := (:1 allrows)
   rows    : csvrows    := (list<-list-end allrows 2)]
  (csv :headers headers :rows rows)))

(func csvrows<-textblock : csvrows
 [textblock : tb/textblock]
 (let
  [parsedtb : tb/textblock     := (tb/textblock<-textblock-delim textblock delimcsv)
   children : tb/textblocklist := (tb/children<-textblock parsedtb)
   strings  : stringlist       := (tb/stringlist<-textblocklist children)]
  (csvrows strings)))

(func textblock-csv<-string : textblock
 [text : string]
 (tb/textblock-parse<-string-delim
  text
  delimcsv)
 :test
  (test
   (tb/textblock
    :text
`"a","b"
1,"2"`
    :startpos 1
    :endpos 13
    :children
     (tb/textblocklist
      (tb/textblock
       :text `"a"`
       :startpos 1
       :endpos 3
       :delim
        (copy tb/delimquote
         :pos 0)
       :children
        (tb/textblocklist
         (tb/textblock
          :text "a"
          :startpos 2
          :endpos 2)))
      (tb/textblock
       :text ","
       :startpos 4
       :endpos 4
       :delim
        (copy tb/delimcomma
         :pos 0))
      (tb/textblock
       :text `"b"`
       :startpos 5
       :endpos 7
       :delim
        (copy tb/delimquote
         :pos 0)
       :children
        (tb/textblocklist
         (tb/textblock
          :text "b"
          :startpos 6
          :endpos 6)))
      (tb/textblock
       :text "\n"
       :startpos 8
       :endpos 8
       :delim
        (copy tb/delimline
         :pos 0))
      (tb/textblock
       :text "1"
       :startpos 9
       :endpos 9)
      (tb/textblock
       :text ","
       :startpos 10
       :endpos 10
       :delim
        (copy tb/delimcomma
         :pos 0))
      (tb/textblock
       :text `"2"`
       :startpos 11
       :endpos 13
       :delim
        (copy tb/delimquote
         :pos 0)
       :children
        (tb/textblocklist
         (tb/textblock
          :text "2"
          :startpos 12
          :endpos 12)))))
   (textblock-csv<-string
    `"a","b"
1,"2"`))
 :doc "Returns a parsed csv-textblock from a string.")
