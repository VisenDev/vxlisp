  public static Vx.Core.Type_boolean vx_boolean_exists_from_file(
    Vx.Data.File.Type_file file) {
    Vx.Core.Type_boolean output = Vx.Core.e_boolean;
    Vx.Core.Type_string fullpath = File.f_pathfull_from_file(file);
    string sfullpath = fullpath.vx_string();
    if (System.IO.File.Exists(sfullpath)) {
      output = Core.c_true;
    }
    return output;
  }

  public static Vx.Core.Type_boolean vx_boolean_write_from_file_string(
    Vx.Core.Type_context context,
    Vx.Data.File.Type_file file,
    Vx.Core.Type_string text) {
    Vx.Core.Type_boolean output = Vx.Core.e_boolean;
    Core.Type_string fullpath = File.f_pathfull_from_file(file);
    string sfullpath = fullpath.vx_string();
    string stext = text.vx_string();
    System.IO.File.WriteAllText(sfullpath, stext);
    output = Core.c_true;
    return output;
  }

  public static Vx.Core.Type_string vx_pathcurrent_from_os() {
    string stext = System.IO.Directory.GetCurrentDirectory();
    Vx.Core.Type_string output = Vx.Core.vx_new_string(stext);
    return output;
  }

  public static Vx.Core.Type_string vx_string_read_from_file(
    Vx.Core.Type_context context,
    Vx.Data.File.Type_file file) {
    Vx.Core.Type_string output = Vx.Core.e_string;
    Vx.Core.Type_string fullpath = File.f_pathfull_from_file(file);
    string sfullpath = fullpath.vx_string();
    if (System.IO.File.Exists(sfullpath)) {
      string scontent = System.IO.File.ReadAllText(sfullpath);
      Vx.Core.Type_string valcontent = Vx.Core.vx_new_string(scontent);
      output = valcontent;
    } else {
      Vx.Core.Type_msg msg = Vx.Core.vx_msg_from_error("string-read<-file", ":filenotfound", file);
      output = Vx.Core.vx_copy(output, msg);
    }
    return output;
  }
